run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 2m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

output:
  # colored-line-number|line-number|json|tab|checkstyle, default is "colored-line-number"
  formats:
  - format: colored-line-number
    path: stdout

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

# all available settings of specific linters
linters-settings:
  errcheck:
    # report about not checking of errors in type assetions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: false

    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: false
  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: true
  goimports:
    # put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: http-everything/httpe
  gocyclo:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    # TODO: reduce to 20 when complex code would be refactored
    min-complexity: 40
  goconst:
    # minimal length of string constant, 3 by default
    min-len: 3
    # minimal occurrences count to trigger, 3 by default
    min-occurrences: 3
  misspell:
    # Correct spellings using locale preferences for US or UK.
    # Default is to use a neutral variety of English.
    # Setting locale to US will correct the British spelling of 'colour' to 'color'.
    locale: UK
    #ignore-words:
    #  - utilisation # can't be fixed due to back compatibility issues.
  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 140
    # tab width in spaces. Default to 1.
    tab-width: 1
  nakedret:
    # make an issue if func has more lines of code than this setting and it has naked returns; default is 30
    max-func-lines: 20
  prealloc:
    # XXX: we don't recommend using this linter before doing performance profiling.
    # For most programs usage of prealloc will be a premature optimization.

    # Report preallocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.
    # True by default.
    simple: true
    range-loops: true # Report preallocation suggestions on range loops, true by default
    for-loops: false # Report preallocation suggestions on for loops, false by default
  gosec:
    excludes:
      - G204

linters:
  enable:
    - goimports
    - govet
    #- golint
    - revive
    - gosimple
    - staticcheck
    - errcheck
    - unused
    - gosec
    - gocyclo
    - misspell
    - unparam
    - ineffassign
    - unconvert
    - whitespace
    - lll
    - nakedret
    - bodyclose
    - errchkjson
    - errorlint
    - thelper

  enable-all: false
  disable: []
  disable-all: true
  presets: []
  fast: false


issues:
  exclude:
    # govet
    - "shadow: declaration of .err. shadows declaration"
    # staticcheck
    - "SA1019" # x is deprecated

